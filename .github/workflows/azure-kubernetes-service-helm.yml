name: Build and deploy an app to AKS with Helm
"on":
    pull_request:
      branches:
        - main
    push:
        branches:
            - main
    workflow_dispatch: null
env:
    LOCATION: eastus
    CHART_PATH: ./charts
    CONTAINER_NAME: draftsample
    AZURE_CONTAINER_REGISTRY: ''
    RESOURCE_GROUP: draftSample
    IMAGE_PULL_SECRET_NAME: mydraftacrsecret
    CHART_OVERRIDE_PATH: ./charts/production.yaml
jobs:
    iac:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Azure login
              uses: azure/login@v1.4.3
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Deploy infrastructure
              id: deploy
              shell: pwsh
              run: |
                $deployment = $(az deployment sub create --name ${{ env.RESOURCE_GROUP }} `
                  --location ${{ env.LOCATION }} `
                  --template-file ./main.bicep `
                  --parameters location=${{ env.LOCATION }} `
                  --parameters rgName=${{ env.RESOURCE_GROUP }} `
                  --output json) | ConvertFrom-Json

                $aksName = $deployment.properties.outputs.aksName.value
                $acrName = $deployment.properties.outputs.acrName.value

                Write-Host "::set-output name=acrName::$acrName"
                Write-Host "::set-output name=aksName::$aksName"
        outputs:
          acrName: ${{ steps.deploy.outputs.acrName }}
          aksName: ${{ steps.deploy.outputs.aksName }}

    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - iac
        steps:
            - uses: actions/checkout@v3
            - name: Azure login
              uses: azure/login@v1.4.3
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Build and push image to ACR
              run: |
                az acr build --image ${{needs.iac.outputs.acrName}}.azurecr.io/${{ env.CONTAINER_NAME }}:${GITHUB_RUN_NUMBER} --registry ${{needs.iac.outputs.acrName}} -g ${{ env.RESOURCE_GROUP }} .
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - iac
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - name: Install Radius CLI
              id: installcli
              run: wget -q "https://get.radapp.dev/tools/rad/install.sh" -O - | /bin/bash
            - name: Azure login
              uses: azure/login@v1.4.3
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Get K8s context
              uses: azure/aks-set-context@v2.0
              with:
                cluster-name: ${{ needs.iac.outputs.aksName }}
                resource-group: ${{ env.RESOURCE_GROUP }}
            - name: Get K8s context using cli
              run: az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ needs.iac.outputs.aksName }} 
            - name: Install Radius in K8s
              id: install
              run: rad env install kubernetes
            - name: Deploy app
              id: deploy
              run: rad app deploy --parameters imageName=${{needs.iac.outputs.acrName}}.azurecr.io/${{ env.CONTAINER_NAME }} --parameters imageTag=${GITHUB_RUN_NUMBER}

            # - id: bake
            #   name: Bake deployment
            #   uses: azure/k8s-bake@v2.1
            #   with:
            #     helm-version: latest
            #     helmChart: ${{ env.CHART_PATH }}
            #     overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
            #     overrides: |
            #         replicas:2
            #         imageKey.repository:${{needs.iac.outputs.acrName}}.azurecr.io/${{ env.CONTAINER_NAME }}
            #     renderEngine: helm
            # - name: Deploy application
            #   uses: Azure/k8s-deploy@v3.1
            #   with:
            #     action: deploy
            #     imagepullsecrets: ${{ env.IMAGE_PULL_SECRET_NAME }}
            #     images: |
            #         ${{needs.iac.outputs.acrName}}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
            #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
